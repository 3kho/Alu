---
import Dropdown from "./Dropdown.astro";
---

<div class="content-hidden">
    <div id="content-setting-tab-proxy">
        <h1 style="color: white;">Proxy</h1>
        <p style="color: white; font-size: 18px;">Selected Proxy</p>
        <Dropdown buttonDefaultName="Auto" dropdownList={["Auto", "Ultraviolet", "Dynamic"]}></Dropdown>
    </div>
    <div id="content-setting-tab-customization">
        <h1 style="color: white;">Customization</h1>
        <p style="color: white;">Customization settings</p>
    </div>
    <div id="content-setting-tab-cloaking">
        <h1 style="color: white;">Cloaking</h1>
        <p style="color: white;">Cloaking settings</p>
    </div>
    <div id="content-setting-tab-credits">
        <h1 style="color: white;">Credits</h1>
        <p style="color: white;">Credits settings</p>
    </div>
</div>

<div class="popup">
    <div class="tabs">
          <input type="radio" id="setting-tab-proxy" class="setting-tab" name="tab" checked="true">        
        <label for="setting-tab-proxy">Proxy</label>
          <input type="radio" id="setting-tab-customization" class="setting-tab" name="tab">
        <label for="setting-tab-customization">Customization</label>
          <input type="radio" id="setting-tab-cloaking" class="setting-tab" name="tab">
        <label for="setting-tab-cloaking">Cloaking</label>
          <input type="radio" id="setting-tab-credits" class="setting-tab" name="tab">
        <label for="setting-tab-credits">Credits</label>
        <div class="marker">
           <div id="top"></div>
           <div id="bottom"></div>
        </div>
    </div>
    <div id="current-content">
        
    </div>
  </div>
  <script is:inline>
    let currentlySelectedTab;
    let loadedContentStorage = {}

    Array.from(document.getElementsByClassName('setting-tab')).forEach((tab)=>{
      let contentToLoad = document.getElementById('content-' + tab.id)
      if (contentToLoad) {
        loadedContentStorage[tab.id] = contentToLoad.innerHTML
        contentToLoad.remove()
      }

      tab.addEventListener('click', (event) => {
        loadContent(event.target.id)
      })
    })

    function loadContent(tabID) {
      if (currentlySelectedTab == tabID) return
        else currentlySelectedTab = tabID
        let currentContent = document.getElementById('current-content')
        if (currentContent) {
          currentContent.style.opacity = '0'
          setTimeout(() => {
            currentContent.innerHTML = loadedContentStorage[tabID]
            currentContent.style.opacity = '1'
            document.dispatchEvent(new CustomEvent('setting-tabChange', {detail: tabID}))
            document.dispatchEvent(new CustomEvent('setting-tabLoad', {detail: 'setting-tab-proxy'}))
          }, 250);
        }
    }
    document.addEventListener('setting-tabChange', (event) => {
      if (event.detail == "setting-tab-proxy") {
        addDropdownListener()

      }
    })
    loadContent('setting-tab-proxy')

    const dropdownHeight = '120px'

    function addDropdownListener() {
      let dropdown_toggle = document.getElementById('dropdown-toggle');
        if (dropdown_toggle) {
            dropdown_toggle.addEventListener('click', () => {
            let dropdown = document.getElementsByClassName('dropdown-menu')[0];
            if (dropdown) {
                if (dropdown.style.height == '0px' || dropdown.style.height == '') {
                    dropdown.style.height = dropdownHeight;
                    dropdown_toggle.style.borderRadius = '10px 10px 0 0';
                } else {
                    dropdown.style.height = '0px';
                    setTimeout(() => {
                        dropdown_toggle.style.borderRadius = '10px';
                    }, 300);
                }
            }
    
        });
        }
    }

    document.addEventListener('setting-tabLoad', (event) => {
      if (event.detail == "setting-tab-proxy") {
        if (localStorage.getItem('selectedProxy')) {
          let dropdown_toggle = document.getElementById('dropdown-toggle');

          if (dropdown_toggle) {
            dropdown_toggle.innerText = localStorage.getItem('selectedProxy').charAt(0).toUpperCase() + localStorage.getItem('selectedProxy').slice(1)
          }
        }
        Array.from(document.getElementsByClassName('dropdown-item')).forEach((item) => {
            item.addEventListener('click', (event) => {
              console.log(event.target.dataset)
              localStorage.setItem('selectedProxy', event.target.dataset.setting)
              let dropdown = document.getElementsByClassName('dropdown-menu')[0];
              if (dropdown) {
                let dropdown_toggle = document.getElementById('dropdown-toggle');
                dropdown_toggle.innerText = event.target.innerText
                dropdown.style.height = '0px';
                dropdown_toggle.style.borderRadius = '10px';
              }
            })
          })
        }
      })
</script>
<style>
.content-hidden {
    display: none;
}
#current-content {
    transition: opacity 250ms ease-in-out;
    margin-left: 20px;
}
label{
  font-size: 24px;
  font-weight: 700; 
  cursor: pointer; 
  color: #d8d8d8; 
  opacity: .4; 
  transition: opacity .4s ease-in-out;
  display: block; 
  width: calc(100% - 48px) ;
  text-align: right; 
  z-index: 100; 
  user-select: none;
  text-align: start;
  margin-left: 20px;
}
input[type="radio"]{
  display: none;
  width: 0;
}
label:hover, input[type="radio"]:checked+label {
  opacity: 1; 
}
.popup{
  width: 800px;
  height: 80%;
  min-height: 400px; 
  max-height: 400px; 
  border-radius: 48px;
  box-sizing: border-box; 
  border: 16px solid #2b2b2b;
  background-color: #1b1b1b;
  overflow: hidden;
  box-shadow: 16px 16px 48px #2e364330;
  display: flex;
  align-self: center;
}
.tabs{
  width: 100%;
  max-width: 240px;
  height: 100%;
  display: flex;
  flex-direction: column; 
  justify-content: space-around; 
  position: relative;
  gap: 25px
}
.marker{
  position: absolute; 
  width: 100%;
  height: 200%;
  display: flex; 
  flex-direction: column;
  top: calc(-100% );
  left: 0;
  transition: transform .2s ease-in-out; 
}
.marker #bottom, .marker #top{
  background-color: #383838;
  box-shadow: 32px 32px 48px #2e364315; 
}
.marker #top{
  height: calc(50%);
  margin-bottom: auto; 
  border-radius: 0 0 32px 0; 
}
.marker #bottom{
  height: calc(50% - 72px);
  border-radius: 0 32px 0 0; 
}
#setting-tab-proxy:checked ~ .marker{transform: translateY(0%)}
#setting-tab-customization:checked ~ .marker{transform: translateY(13.5%)}
#setting-tab-cloaking:checked ~ .marker{transform: translateY(27%)}
#setting-tab-credits:checked ~ .marker{transform: translateY(40.5%)}
</style>